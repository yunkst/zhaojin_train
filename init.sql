CREATE TABLE "knowledge" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "question" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "difficulty" decimal(8,6) NOT NULL,
  "knowledge_id" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "user_question_submission_record" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "question_id" int NOT NULL,
  "user_id" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "user_question_study_card" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "question_id" int NOT NULL,
  "user_id" int NOT NULL,
  "card_json" JSON NOT NULL,
  "due" TIMESTAMPTZ NOT NULL,
  "last_study_time" TIMESTAMPTZ,
  "study_count" int NOT NULL DEFAULT 0,
  "correct_count" int NOT NULL DEFAULT 0,
  "adaptivity_easy_factor" decimal(8,6) NOT NULL,
  "ease" decimal(8,6) NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "user_knowledge_ease" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "knowledge_id" int NOT NULL,
  "user_id" int NOT NULL,
  "ease" decimal(8,6) NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "user" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "class_id" int NOT NULL,
  "department_id" int NOT NULL,
  "company_id" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "class" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "department_id" int NOT NULL
);

CREATE TABLE "department" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "company_id" int NOT NULL
);

CREATE TABLE "company" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "corp_id" int NOT NULL
);

CREATE TABLE "corporation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL
);

CREATE TABLE "user_points" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "total" int NOT NULL DEFAULT 0,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "user_points_record" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "value" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "online_days" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "days" int NOT NULL DEFAULT 0,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "online_days_record" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "stat_info" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "type" varchar(64) NOT NULL,
  "source_id" int,
  "target_id" int,
  "total" int NOT NULL DEFAULT 0,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "stat_info_record" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "type" varchar(64) NOT NULL,
  "source_id" int,
  "target_id" int,
  "value" int NOT NULL DEFAULT 0,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE TABLE "jwt_auth" (
  "id" varchar(255) PRIMARY KEY,
  "password" varchar(255) NOT NULL,
  "user_id" int NOT NULL,
  "meta" JSON NOT NULL DEFAULT '{}',
  "created_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "updated_at" TIMESTAMPTZ NOT NULL DEFAULT 'now()',
  "deleted" bool NOT NULL DEFAULT false
);

CREATE INDEX ON "question" ("knowledge_id");

CREATE INDEX ON "user_question_submission_record" ("question_id");

CREATE INDEX ON "user_question_submission_record" ("user_id");

CREATE INDEX ON "user_question_submission_record" ("created_at");

CREATE INDEX ON "user_question_study_card" ("question_id");

CREATE INDEX ON "user_question_study_card" ("user_id");

CREATE INDEX ON "user_question_study_card" ("due");

CREATE INDEX ON "user_knowledge_ease" ("user_id");

CREATE INDEX ON "user_points" ("user_id");

CREATE INDEX ON "user_points" ("total");

CREATE INDEX ON "user_points_record" ("user_id");

CREATE INDEX ON "user_points_record" ("created_at");

CREATE INDEX ON "online_days" ("user_id");

CREATE INDEX ON "online_days" ("days");

CREATE INDEX ON "online_days_record" ("user_id");

CREATE INDEX ON "online_days_record" ("created_at");

CREATE INDEX ON "stat_info" ("source_id");

CREATE INDEX ON "stat_info" ("target_id");

CREATE INDEX ON "stat_info" ("total");

CREATE INDEX ON "stat_info_record" ("source_id");

CREATE INDEX ON "stat_info_record" ("target_id");

CREATE INDEX ON "stat_info_record" ("created_at");

CREATE INDEX ON "jwt_auth" ("user_id");

COMMENT ON COLUMN "knowledge"."name" IS '名字';

COMMENT ON COLUMN "knowledge"."created_at" IS '创建时间';

COMMENT ON COLUMN "knowledge"."updated_at" IS '更新时间';

COMMENT ON COLUMN "knowledge"."deleted" IS '是否删除';

COMMENT ON COLUMN "question"."difficulty" IS '难度系数';

COMMENT ON COLUMN "question"."knowledge_id" IS '知识点ID';

COMMENT ON COLUMN "question"."created_at" IS '创建时间';

COMMENT ON COLUMN "question"."updated_at" IS '更新时间';

COMMENT ON COLUMN "question"."deleted" IS '是否删除';

COMMENT ON COLUMN "user_question_submission_record"."question_id" IS '问题ID';

COMMENT ON COLUMN "user_question_submission_record"."user_id" IS '用户ID';

COMMENT ON COLUMN "user_question_submission_record"."created_at" IS '创建时间';

COMMENT ON COLUMN "user_question_submission_record"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user_question_submission_record"."deleted" IS '是否删除';

COMMENT ON COLUMN "user_question_study_card"."question_id" IS '问题ID';

COMMENT ON COLUMN "user_question_study_card"."user_id" IS '用户ID';

COMMENT ON COLUMN "user_question_study_card"."card_json" IS '卡片内容';

COMMENT ON COLUMN "user_question_study_card"."due" IS '卡片截止日期';

COMMENT ON COLUMN "user_question_study_card"."last_study_time" IS '上次学习时间';

COMMENT ON COLUMN "user_question_study_card"."study_count" IS '学习次数';

COMMENT ON COLUMN "user_question_study_card"."correct_count" IS '正确次数';

COMMENT ON COLUMN "user_question_study_card"."adaptivity_easy_factor" IS '适应性易错系数';

COMMENT ON COLUMN "user_question_study_card"."ease" IS '熟练度';

COMMENT ON COLUMN "user_question_study_card"."created_at" IS '创建时间';

COMMENT ON COLUMN "user_question_study_card"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user_question_study_card"."deleted" IS '是否删除';

COMMENT ON COLUMN "user_knowledge_ease"."knowledge_id" IS '知识点ID';

COMMENT ON COLUMN "user_knowledge_ease"."user_id" IS '用户ID';

COMMENT ON COLUMN "user_knowledge_ease"."ease" IS '熟练度';

COMMENT ON COLUMN "user_knowledge_ease"."created_at" IS '创建时间';

COMMENT ON COLUMN "user_knowledge_ease"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user_knowledge_ease"."deleted" IS '是否删除';

COMMENT ON COLUMN "user"."name" IS '名字';

COMMENT ON COLUMN "user"."class_id" IS '班级ID';

COMMENT ON COLUMN "user"."department_id" IS '部门ID';

COMMENT ON COLUMN "user"."company_id" IS '公司ID';

COMMENT ON COLUMN "user"."created_at" IS '创建时间';

COMMENT ON COLUMN "user"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user"."deleted" IS '是否删除';

COMMENT ON COLUMN "class"."name" IS '名字';

COMMENT ON COLUMN "class"."department_id" IS '部门ID';

COMMENT ON COLUMN "department"."name" IS '名字';

COMMENT ON COLUMN "department"."company_id" IS '公司ID';

COMMENT ON COLUMN "company"."name" IS '名字';

COMMENT ON COLUMN "company"."corp_id" IS '集团ID';

COMMENT ON COLUMN "corporation"."name" IS '名字';

COMMENT ON COLUMN "user_points"."user_id" IS '用户ID';

COMMENT ON COLUMN "user_points"."total" IS '总积分';

COMMENT ON COLUMN "user_points"."created_at" IS '创建时间';

COMMENT ON COLUMN "user_points"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user_points"."deleted" IS '是否删除';

COMMENT ON COLUMN "user_points_record"."user_id" IS '用户ID';

COMMENT ON COLUMN "user_points_record"."value" IS '积分';

COMMENT ON COLUMN "user_points_record"."created_at" IS '创建时间';

COMMENT ON COLUMN "user_points_record"."updated_at" IS '更新时间';

COMMENT ON COLUMN "user_points_record"."deleted" IS '是否删除';

COMMENT ON COLUMN "online_days"."user_id" IS '用户ID';

COMMENT ON COLUMN "online_days"."days" IS '最长连续天数';

COMMENT ON COLUMN "online_days"."created_at" IS '创建时间';

COMMENT ON COLUMN "online_days"."updated_at" IS '更新时间';

COMMENT ON COLUMN "online_days"."deleted" IS '是否删除';

COMMENT ON COLUMN "online_days_record"."user_id" IS '用户ID';

COMMENT ON COLUMN "online_days_record"."created_at" IS '创建时间';

COMMENT ON COLUMN "online_days_record"."updated_at" IS '更新时间';

COMMENT ON COLUMN "online_days_record"."deleted" IS '是否删除';

COMMENT ON COLUMN "stat_info"."type" IS '类型';

COMMENT ON COLUMN "stat_info"."source_id" IS '源ID,如某个人/某部门';

COMMENT ON COLUMN "stat_info"."target_id" IS '目标ID,如某道题/某知识点';

COMMENT ON COLUMN "stat_info"."total" IS '总值';

COMMENT ON COLUMN "stat_info"."created_at" IS '创建时间';

COMMENT ON COLUMN "stat_info"."updated_at" IS '更新时间';

COMMENT ON COLUMN "stat_info"."deleted" IS '是否删除';

COMMENT ON COLUMN "stat_info_record"."type" IS '类型';

COMMENT ON COLUMN "stat_info_record"."source_id" IS '源ID,如某个人/某部门';

COMMENT ON COLUMN "stat_info_record"."target_id" IS '目标ID,如某道题/某知识点';

COMMENT ON COLUMN "stat_info_record"."value" IS '值';

COMMENT ON COLUMN "stat_info_record"."created_at" IS '创建时间';

COMMENT ON COLUMN "stat_info_record"."updated_at" IS '更新时间';

COMMENT ON COLUMN "stat_info_record"."deleted" IS '是否删除';

COMMENT ON COLUMN "jwt_auth"."password" IS '密码';

COMMENT ON COLUMN "jwt_auth"."user_id" IS '用户ID';

COMMENT ON COLUMN "jwt_auth"."created_at" IS '创建时间';

COMMENT ON COLUMN "jwt_auth"."updated_at" IS '更新时间';

COMMENT ON COLUMN "jwt_auth"."deleted" IS '是否删除';

ALTER TABLE "question" ADD FOREIGN KEY ("knowledge_id") REFERENCES "knowledge" ("id");

ALTER TABLE "user_question_submission_record" ADD FOREIGN KEY ("question_id") REFERENCES "question" ("id");

ALTER TABLE "user_question_submission_record" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "user_question_study_card" ADD FOREIGN KEY ("question_id") REFERENCES "question" ("id");

ALTER TABLE "user_question_study_card" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "user_knowledge_ease" ADD FOREIGN KEY ("knowledge_id") REFERENCES "knowledge" ("id");

ALTER TABLE "user_knowledge_ease" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "user" ADD FOREIGN KEY ("class_id") REFERENCES "class" ("id");

ALTER TABLE "user" ADD FOREIGN KEY ("department_id") REFERENCES "department" ("id");

ALTER TABLE "user" ADD FOREIGN KEY ("company_id") REFERENCES "company" ("id");

ALTER TABLE "class" ADD FOREIGN KEY ("department_id") REFERENCES "department" ("id");

ALTER TABLE "department" ADD FOREIGN KEY ("company_id") REFERENCES "company" ("id");

ALTER TABLE "company" ADD FOREIGN KEY ("corp_id") REFERENCES "corporation" ("id");

ALTER TABLE "user_points" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "user_points_record" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "online_days" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "online_days_record" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "jwt_auth" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");
